alias dpsa="docker ps -a"
alias dremoveall="docker rm \$(docker ps -a -q) && docker network rm \$(docker network ls -q) && docker rmi -f \$(docker images \-f dangling=true -q) && docker volume rm \$(docker volume ls | grep \-v wordpress | awk '{ print \$2; }')"
alias dstopall="docker stop \$(docker ps -a -q)"

# Initial setup
dinit() {
	dinit_containers
	dcomposer install
}

# Creates directories required for WordPress themes & plugins
dinit_mkdirs() {
	mkdir -pv build/wp-content/{plugins,themes,uploads,upgrade}
}

dinit_containers() {
	if [ ! -d "build/" ]; then
		dinit_mkdirs
	fi

	docker compose up --build --remove-orphans -d
}

# Drop-in Docker replacements for CLI tools

# composer
dcomposer() {
	docker run --rm -it --name composer_temp --user $(id -u):$(id -g) --volume "$PWD":/app composer:2.1.11 $@
}

# node
dnode() {
	docker run --rm -it --name node_temp --user "node" --volume "$PWD":/usr/src/app -w /usr/src/app node $@
}

# wordpress:cli
dwpcli() {
	wp_container=$(docker ps -aqf name=wordpress)
	if [[ $wp_container ]]; then
		docker run --rm -it --user 1000:1000 --volumes-from $wp_container --network container:$wp_container wordpress:cli wp $@
	fi
}

# Execute yarn commands in Docker
dyarn() {
	dnode yarn
}

dyarn_watch() {
	dyarn && dyarn watch
}

# Follow logs
dfl() {
	docker logs -f $(docker ps -aqf name=$1)
}

# Execute raw commands in a Docker container
dexec() {
	docker exec -ti $@
}

dconrm() {
	docker container rm -fv $@
}
